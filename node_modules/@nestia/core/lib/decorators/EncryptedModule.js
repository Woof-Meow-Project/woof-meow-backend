"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EncryptedModule = void 0;
var common_1 = require("@nestjs/common");
var EncryptedConstant_1 = require("./internal/EncryptedConstant");
var load_controller_1 = require("./internal/load_controller");
/**
 * Encrypted module.
 *
 * `EncryptedModule` is an extension of the {@link Module} class decorator function
 * who configures encryption password of the AES-128/256 algorithm. The encryption
 * algorithm and password would be used by {@link EncryptedRoute} and {@link EncryptedBody}
 * to encrypt the request and response bod of the HTTP protocol.
 *
 * By using this `EncryptedModule` decorator function, all of the
 * {@link Controller controllers} configured in the *metadata* would be automatically
 * changed to the {@link EncryptedController} with the *password*. If there're some
 * original {@link EncryptedController} decorated classes in the *metadata*, their
 * encryption password would be kept.
 *
 * Therefore, if you're planning to place original {@link EncryptedController} decorated
 * classes in the *metadata*, I hope them to have different encryption password from the
 * module level. If not, I recommend you use the {@link Controller} decorator
 * function instead.
 *
 * In addition, the `EncryptedModule` supports a convenient dynamic controller importing
 * function, {@link EncryptedModule.dynamic}. If you utilize the function with directory
 * path of the controller classes, it imports and configures the controller classes into
 * the `Module`, automatically.
 *
 * @param metadata Module configuration metadata
 * @param password Encryption password or its getter function
 * @returns Class decorator
 *
 * @author Jeongho Nam - https://github.com/samchon
 */
function EncryptedModule(metadata, password) {
    return function (target) {
        var e_1, _a;
        (0, common_1.Module)(metadata)(target);
        if (metadata.controllers === undefined)
            return;
        try {
            for (var _b = __values(metadata.controllers), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (Reflect.hasMetadata(EncryptedConstant_1.ENCRYPTION_METADATA_KEY, c) === false)
                    Reflect.defineMetadata(EncryptedConstant_1.ENCRYPTION_METADATA_KEY, password, c);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
}
exports.EncryptedModule = EncryptedModule;
(function (EncryptedModule) {
    /**
     * Dynamic encrypted module.
     *
     * `EncryptedModule.dynamic` is an extension of the {@link EncryptedModule} function
     * who configures controller classes by the dynamic importing. By specifying directory
     * path of the controller classes, those controllers would be automatically imported
     * and configured.
     *
     * @param path Directory path of the controller classes
     * @param password Encryption password or its getter function
     * @param options Additional options except controller
     * @returns Class decorated module instance
     */
    function dynamic(path, password, options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var controllers, NestiaModule;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, load_controller_1.load_controllers)(path)];
                    case 1:
                        controllers = _a.sent();
                        NestiaModule = /** @class */ (function () {
                            function NestiaModule() {
                            }
                            NestiaModule = __decorate([
                                EncryptedModule(__assign(__assign({}, options), { controllers: controllers }), password)
                            ], NestiaModule);
                            return NestiaModule;
                        }());
                        return [2 /*return*/, NestiaModule];
                }
            });
        });
    }
    EncryptedModule.dynamic = dynamic;
})(EncryptedModule || (exports.EncryptedModule = EncryptedModule = {}));
//# sourceMappingURL=EncryptedModule.js.map