/**
 * Type safe URL parameter decorator.
 *
 * `TypedParam` is a decorator function getting specific typed parameter from the
 * HTTP request URL. It's almost same with the {@link nest.Param}, but `TypedParam`
 * automatically casts parameter value to be following its type, and validates it.
 *
 * ```typescript
 * import { tags } from "typia";
 *
 * \@TypedRoute.Get("shopping/sales/:id/:no/:paused")
 * public async pause
 *     (
 *         \@TypedParam("id", "uuid"), id: string & tags.Format<"uuid">,
 *         \@TypedParam("no") id: number & tags.Type<"uint32">
 *         \@TypedParam("paused") paused: boolean | null
 *     ): Promise<void>;
 * ```
 *
 * @param name URL Parameter name
 * @returns Parameter decorator
 *
 * @author Jeongho Nam - https://github.com/samchon
 */
export declare function TypedParam<T extends boolean | bigint | number | string | null>(name: string, assert?: (value: string) => T): ParameterDecorator;
