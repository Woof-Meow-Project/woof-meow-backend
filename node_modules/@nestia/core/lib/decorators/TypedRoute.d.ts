import { IResponseBodyStringifier } from "../options/IResponseBodyStringifier";
/**
 * Type safe router decorator functions.
 *
 * `TypedRoute` is a module containing router decorator functions which can boost up
 * JSON string conversion speed about 200x times faster than `class-transformer`.
 * Furthermore, such JSON string conversion is even type safe through
 * [typia](https://github.com/samchon/typia).
 *
 * For reference, if you try to invalid data that is not following the promised
 * type `T`, 500 internal server error would be thrown. Also, as `TypedRoute` composes
 * JSON string through `typia.assertStringify<T>()` function, it is not possible to
 * modify response data through interceptors.
 *
 * @author Jeongho Nam - https://github.com/samchon
 */
export declare namespace TypedRoute {
    /**
     * Router decorator function for the GET method.
     *
     * @param path Path of the HTTP request
     * @returns Method decorator
     */
    const Get: {
        (path?: string | string[]): MethodDecorator;
        <T>(stringify?: IResponseBodyStringifier<T> | undefined): MethodDecorator;
        <T_1>(path: string | string[], stringify?: IResponseBodyStringifier<T_1> | undefined): MethodDecorator;
    };
    /**
     * Router decorator function for the POST method.
     *
     * @param path Path of the HTTP request
     * @returns Method decorator
     */
    const Post: {
        (path?: string | string[]): MethodDecorator;
        <T>(stringify?: IResponseBodyStringifier<T> | undefined): MethodDecorator;
        <T_1>(path: string | string[], stringify?: IResponseBodyStringifier<T_1> | undefined): MethodDecorator;
    };
    /**
     * Router decorator function for the PATH method.
     *
     * @param path Path of the HTTP request
     * @returns Method decorator
     */
    const Patch: {
        (path?: string | string[]): MethodDecorator;
        <T>(stringify?: IResponseBodyStringifier<T> | undefined): MethodDecorator;
        <T_1>(path: string | string[], stringify?: IResponseBodyStringifier<T_1> | undefined): MethodDecorator;
    };
    /**
     * Router decorator function for the PUT method.
     *
     * @param path Path of the HTTP request
     * @returns Method decorator
     */
    const Put: {
        (path?: string | string[]): MethodDecorator;
        <T>(stringify?: IResponseBodyStringifier<T> | undefined): MethodDecorator;
        <T_1>(path: string | string[], stringify?: IResponseBodyStringifier<T_1> | undefined): MethodDecorator;
    };
    /**
     * Router decorator function for the DELETE method.
     *
     * @param path Path of the HTTP request
     * @returns Method decorator
     */
    const Delete: {
        (path?: string | string[]): MethodDecorator;
        <T>(stringify?: IResponseBodyStringifier<T> | undefined): MethodDecorator;
        <T_1>(path: string | string[], stringify?: IResponseBodyStringifier<T_1> | undefined): MethodDecorator;
    };
}
