"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.route_error = void 0;
var common_1 = require("@nestjs/common");
var rxjs_1 = require("rxjs");
var ExceptionManager_1 = require("../../utils/ExceptionManager");
/**
 * @internal
 */
function route_error(request, error) {
    var _a, _b, _c;
    error = (function () {
        var e_1, _a;
        // HTTP-ERROR
        if (error instanceof common_1.HttpException)
            return error;
        try {
            // CUSTOM-REGISTERED ERROR
            for (var _b = __values(ExceptionManager_1.ExceptionManager.tuples), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), creator = _d[0], closure = _d[1];
                if (error instanceof creator)
                    return closure(error);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // MAYBE INTERNAL ERROR
        return error;
    })();
    try {
        error.method = request.method;
        error.path =
            (_c = (_a = request.path) !== null && _a !== void 0 ? _a : (_b = request.routeOptions) === null || _b === void 0 ? void 0 : _b.url) !== null && _c !== void 0 ? _c : request.routerPath;
    }
    catch (_d) { }
    setTimeout(function () {
        var e_2, _a;
        try {
            for (var _b = __values(ExceptionManager_1.ExceptionManager.listeners), _c = _b.next(); !_c.done; _c = _b.next()) {
                var listener = _c.value;
                try {
                    var res = listener(error);
                    if (typeof res === "object" && typeof res.catch === "function")
                        res.catch(function () { });
                }
                catch (_d) { }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }, 0);
    return (0, rxjs_1.throwError)(function () { return error; });
}
exports.route_error = route_error;
//# sourceMappingURL=route_error.js.map