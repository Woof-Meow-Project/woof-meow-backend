"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParameterTransformer = void 0;
var typescript_1 = __importDefault(require("typescript"));
var ParameterDecoratorTransformer_1 = require("./ParameterDecoratorTransformer");
var ParameterTransformer;
(function (ParameterTransformer) {
    ParameterTransformer.transform = function (project) {
        return function (param) {
            // CHECK DECORATOR
            var decorators = typescript_1.default.getDecorators
                ? typescript_1.default.getDecorators(param)
                : param.decorators;
            if (!(decorators === null || decorators === void 0 ? void 0 : decorators.length))
                return param;
            // GET TYPE INFO
            var type = project.checker.getTypeAtLocation(param);
            // WHEN LATEST TS VERSION
            if (typescript_1.default.getDecorators !== undefined)
                return typescript_1.default.factory.updateParameterDeclaration(param, (param.modifiers || []).map(function (mod) {
                    return typescript_1.default.isDecorator(mod)
                        ? ParameterDecoratorTransformer_1.ParameterDecoratorTransformer.transform(project)(type)(mod)
                        : mod;
                }), param.dotDotDotToken, param.name, param.questionToken, param.type, param.initializer);
            // eslint-disable-next-line
            return typescript_1.default.factory.updateParameterDeclaration(param, decorators.map(function (deco) {
                return ParameterDecoratorTransformer_1.ParameterDecoratorTransformer.transform(project)(type)(deco);
            }), param.modifiers, param.dotDotDotToken, param.name, param.questionToken, param.type, param.initializer);
        };
    };
})(ParameterTransformer || (exports.ParameterTransformer = ParameterTransformer = {}));
//# sourceMappingURL=ParameterTransformer.js.map