import ts from "typescript";
import { MetadataCollection } from "typia/lib/factories/MetadataCollection";
import { INestiaConfig } from "../INestiaConfig";
import { IRoute } from "../structures/IRoute";
import { ISwaggerError } from "../structures/ISwaggerError";
import { ISwaggerLazyProperty } from "../structures/ISwaggerLazyProperty";
import { ISwaggerLazySchema } from "../structures/ISwaggerLazySchema";
export declare namespace SwaggerGenerator {
    interface IProps {
        config: INestiaConfig.ISwaggerConfig;
        checker: ts.TypeChecker;
        collection: MetadataCollection;
        lazySchemas: Array<ISwaggerLazySchema>;
        lazyProperties: Array<ISwaggerLazyProperty>;
        errors: ISwaggerError[];
    }
    const generate: (checker: ts.TypeChecker) => (config: INestiaConfig.ISwaggerConfig) => (routeList: IRoute[]) => Promise<void>;
}
