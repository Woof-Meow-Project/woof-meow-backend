"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeWorkerCompiler = void 0;
/**
 * @packageDocumentation
 * @module tgrid.protocols.workers
 */
//----------------------------------------------------------------
var uuid_1 = require("uuid");
var NodeModule_1 = require("../../../utils/internal/NodeModule");
var FileSystem_1 = require("./FileSystem");
var ProcessWorker_1 = require("./processes/ProcessWorker");
var ThreadWorker_1 = require("./threads/ThreadWorker");
/**
 * @hidden
 */
var NodeWorkerCompiler = function (type) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        return [2 /*return*/, ({
                execute: function (jsFile, execArg) { return __awaiter(void 0, void 0, void 0, function () {
                    var factory, _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                if (!(type === "process")) return [3 /*break*/, 2];
                                return [4 /*yield*/, (0, ProcessWorker_1.ProcessWorker)()];
                            case 1:
                                _a = _b.sent();
                                return [3 /*break*/, 4];
                            case 2: return [4 /*yield*/, (0, ThreadWorker_1.ThreadWorker)()];
                            case 3:
                                _a = _b.sent();
                                _b.label = 4;
                            case 4:
                                factory = _a;
                                return [2 /*return*/, new factory(jsFile, execArg)];
                        }
                    });
                }); },
                compile: function (content) { return __awaiter(void 0, void 0, void 0, function () {
                    var os, path, myPath;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, NodeModule_1.NodeModule.os.get()];
                            case 1:
                                os = _a.sent();
                                path = "".concat(os.tmpdir().split("\\").join("/"), "/tgrid");
                                return [4 /*yield*/, FileSystem_1.FileSystem.exists(path)];
                            case 2:
                                if (!((_a.sent()) === false)) return [3 /*break*/, 4];
                                return [4 /*yield*/, FileSystem_1.FileSystem.mkdir(path)];
                            case 3:
                                _a.sent();
                                _a.label = 4;
                            case 4:
                                if (!true) return [3 /*break*/, 6];
                                myPath = "".concat(path, "/").concat((0, uuid_1.v4)(), ".js");
                                return [4 /*yield*/, FileSystem_1.FileSystem.exists(myPath)];
                            case 5:
                                if ((_a.sent()) === false) {
                                    path = myPath;
                                    return [3 /*break*/, 6];
                                }
                                return [3 /*break*/, 4];
                            case 6: return [4 /*yield*/, FileSystem_1.FileSystem.write(path, content)];
                            case 7:
                                _a.sent();
                                return [2 /*return*/, path];
                        }
                    });
                }); },
                remove: function (url) { return __awaiter(void 0, void 0, void 0, function () {
                    var _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                _b.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, FileSystem_1.FileSystem.unlink(url)];
                            case 1:
                                _b.sent();
                                return [3 /*break*/, 3];
                            case 2:
                                _a = _b.sent();
                                return [3 /*break*/, 3];
                            case 3: return [2 /*return*/];
                        }
                    });
                }); },
                // public execute(jsFile: string, execArgv: string[] | undefined): Worker
                // {
                //     return new this.factory_(jsFile, execArgv) as any;
                // }
            })];
    });
}); };
exports.NodeWorkerCompiler = NodeWorkerCompiler;
//# sourceMappingURL=NodeWorkerCompiler.js.map